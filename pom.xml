<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>article-app-parent</artifactId>
    <groupId>gt.app</groupId>
    <packaging>pom</packaging>
    <version>1.0</version>

    <modules>
        <module>main-app</module>
        <module>email</module>
        <module>common</module>
        <module>trend</module>
        <module>content-checker</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>21</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <spring-boot.version>3.4.3</spring-boot.version>
        <spring-cloud.version>2024.0.0</spring-cloud.version>
        <hibernate-types60.version>2.21.1</hibernate-types60.version>
        <hibernate-hypersistence-utils.version>3.6.1</hibernate-hypersistence-utils.version>
        <datasource-proxy-sb-starter.version>1.9.2</datasource-proxy-sb-starter.version>
        <datasource-micrometer-sb-starter.version>1.0.5</datasource-micrometer-sb-starter.version>
        <springdoc-openapi-ui.version>2.8.5</springdoc-openapi-ui.version>
        <mapstruct.version>1.6.2</mapstruct.version>

        <selenide.version>7.5.1</selenide.version>

        <google-guava.version>33.3.0-jre</google-guava.version>
        <wro4j.version>2.1.1</wro4j.version>
        <archunit.version>1.3.0</archunit.version>
        <testcontainers-keycloak.version>3.4.0</testcontainers-keycloak.version>
        <testcontainers.version>1.20.1</testcontainers.version>
        <commons-io.version>2.17.0</commons-io.version>
        <webjar-jquery.version>3.6.1</webjar-jquery.version>
        <webjar-bootstrap.version>5.0.1</webjar-bootstrap.version>
        <webjar-jquery-toast-plugin.version>1.3.2</webjar-jquery-toast-plugin.version>

        <spock-version>2.4-M4-groovy-4.0</spock-version>
        <objenesis.version>3.4</objenesis.version>

        <!-- plugins -->
        <sonar-maven-plugin.version>4.0.0.4121</sonar-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.5.0</maven-checkstyle-plugin.version>
        <puppycrawl.checkstyle.version>10.18.1</puppycrawl.checkstyle.version>
        <puppycrawl.checkstyle.config.file>src/main/resources/checkstyle.xml</puppycrawl.checkstyle.config.file>
        <gmavenplus.version>3.0.2</gmavenplus.version>
        <maven-surefire-plugin.version>3.5.0</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.5.0</maven-failsafe-plugin.version>
        <modernizer-maven-plugin.version>2.9.0</modernizer-maven-plugin.version>
        <spotbugs-maven-plugin.version>4.8.6.4</spotbugs-maven-plugin.version>
        <owasp-dependency-check-plugin.version>8.4.0</owasp-dependency-check-plugin.version>
        <pitest-maven-plugin.version>1.17.0</pitest-maven-plugin.version>
        <pitest-junit5-plugin.version>1.2.1</pitest-junit5-plugin.version>
    </properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-bom</artifactId>
                <version>${spock-version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <artifactId>main-orm</artifactId>
                <groupId>gt.app</groupId>
                <version>${app.version}</version>
            </dependency>
            <dependency>
                <artifactId>main-orm-jooq</artifactId>
                <groupId>gt.app</groupId>
                <version>${app.version}</version>
            </dependency>
            <dependency>
                <artifactId>common</artifactId>
                <groupId>gt.app</groupId>
                <version>${app.version}</version>
            </dependency>
            <dependency>
                <artifactId>email-service-api</artifactId>
                <groupId>gt.app</groupId>
                <version>${app.version}</version>
            </dependency>
            <dependency>
                <artifactId>trend-service-api</artifactId>
                <groupId>gt.app</groupId>
                <version>${app.version}</version>
            </dependency>
            <dependency>
                <artifactId>content-checker-service-model</artifactId>
                <groupId>gt.app</groupId>
                <version>${app.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <!-- needed by selenide -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>

            <dependency>
                <groupId>com.codeborne</groupId>
                <artifactId>selenide</artifactId>
                <version>${selenide.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vladmihalcea</groupId>
                <artifactId>hibernate-types-60</artifactId>
                <version>${hibernate-types60.version}</version>
            </dependency>
            <dependency>
                <groupId>io.hypersistence</groupId>
                <artifactId>hypersistence-utils-hibernate-60</artifactId>
                <version>${hibernate-hypersistence-utils.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.gavlyukovskiy</groupId>
                <artifactId>datasource-proxy-spring-boot-starter</artifactId>
                <version>${datasource-proxy-sb-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>net.ttddyy.observation</groupId>
                <artifactId>datasource-micrometer-spring-boot</artifactId>
                <version>${datasource-micrometer-sb-starter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.tngtech.archunit</groupId>
                <artifactId>archunit</artifactId>
                <version>${archunit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${testcontainers.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>mysql</artifactId>
                <version>${testcontainers.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.dasniko</groupId>
                <artifactId>testcontainers-keycloak</artifactId>
                <version>${testcontainers-keycloak.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google-guava.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc-openapi-ui.version}</version>
            </dependency>

            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>jquery</artifactId>
                <version>${webjar-jquery.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars.npm</groupId>
                <artifactId>bootstrap</artifactId>
                <version>${webjar-bootstrap.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars.bower</groupId>
                <artifactId>jquery-toast-plugin</artifactId>
                <version>${webjar-jquery-toast-plugin.version}</version>
            </dependency>

            <!-- Optional dependencies for using Spock -->
            <dependency> <!-- enables mocking of classes without default constructor (together with ByteBuddy or CGLIB) -->
                <groupId>org.objenesis</groupId>
                <artifactId>objenesis</artifactId>
                <version>${objenesis.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.gaul</groupId>
                    <artifactId>modernizer-maven-plugin</artifactId>
                    <version>${modernizer-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>modernizer</id>
                            <phase>package</phase>
                            <goals>
                                <goal>modernizer</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <javaVersion>${java.version}</javaVersion>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <configuration>
                        <configLocation>${puppycrawl.checkstyle.config.file}</configLocation>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${puppycrawl.checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>verify-checkstyle</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.gaul</groupId>
                    <artifactId>modernizer-maven-plugin</artifactId>
                    <version>${modernizer-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>modernizer</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>modernizer</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <javaVersion>${java.version}</javaVersion>
                        <includeTestClasses>false</includeTestClasses>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>verify-spotbugs</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <excludeFilterFile>spot-bugs.filter-exclude.xml</excludeFilterFile>
                        <includeTests>false</includeTests>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.pitest</groupId>
                    <artifactId>pitest-maven</artifactId>
                    <version>${pitest-maven-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.pitest</groupId>
                            <artifactId>pitest-junit5-plugin</artifactId>
                            <version>${pitest-junit5-plugin.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <targetClasses>gt.app.modules.file.*</targetClasses>
                        <targetTests>gt.app.modules.file.*</targetTests>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>
